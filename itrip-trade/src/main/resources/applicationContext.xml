<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--添加ioc注解支持-->
    <!--包扫描，该包下的所有类以及所有子包下的所有类都支持注解-->
    <context:component-scan base-package="cn.itrip.trade.service,cn.itrip.trade.bean"/>

    <!--读取连接数据库的properties文件-->
    <!--<context:property-placeholder location="classpath:database.properties"/>-->

    <!--读取多个配置文件-->
    <!--<context:property-placeholder location="classpath:*.properties"/>-->
    <bean id="PropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!--order属性代表其加载顺序-->
        <property name="order" value="1" />
        <!--是否忽略不可解析的Placeholder，配置了多个properties，需设置为true-->
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <!--连接数据库的properties文件-->
                <value>classpath:database.properties</value>
                <!--阿里配置信息-->
                <value>classpath:alipay.properties</value>
            </list>
        </property>
    </bean>

    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxWaitMillis" value="${maxWait}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <property name="removeAbandonedOnBorrow" value="${removeAbandoned}"/>
        <!-- sql心跳    保证连接池中的连接是真实有效的-->
        <!--开启Evict的定时校验，循环校验  -->
        <property name="testWhileIdle" value="true"></property>
        <!-- 定义Evict的时间间隔，单位：毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 在进行borrowObject处理时，会对拿到的 连接进行校验-false-->
        <property name="testOnBorrow" value="false"></property>
        <!-- 在进行ruturnObject处理时，会对返回的连接进行校验-false -->
        <property name="testOnReturn" value="false"></property>
        <!-- 校验使用的sql语句，validatetionQuery，复杂的校验sql会影响性能 -->
        <property name="validationQuery" value="select 1"></property>
        <!-- 配置每次校验连接的数量，一般等于maxActive -->
        <property name="numTestsPerEvictionRun" value="${maxActive}"></property>
    </bean>

    <!--mybatis的核心类-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--起别名。在mapper文件中写类名是可以不写包名，直接写类名-->
        <property name="typeAliasesPackage" value="cn.itrip.beans.pojo"/>
    </bean>

    <!--接口的mapper映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
        <property name="basePackage" value="cn.itrip.dao"/>
    </bean>

    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启事务的注解支持-->
    <!--上面这个bean的id如果写成这样，可以省略transaction-manager="transactionManager"-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="alipayConfig" class="cn.itrip.trade.bean.AlipayConfig">
        <property name="appID" value="${app_id}"/>
        <property name="rsaPrivateKey" value="${merchant_private_key}"/>
        <property name="alipayPublicKey" value="${alipay_public_key}"/>
        <property name="url" value="${gatewayUrl}"/>
        <property name="charset" value="${charset}"/>
        <property name="signType" value="${sign_type}"/>
        <property name="returnUrl" value="${return_url}"/>
        <property name="notifyUrl" value="${notify_url}"/>
        <property name="paymentSuccessUrl" value="${paymentSuccessUrl}"/>
        <property name="paymentFailureUrl" value="${paymentFailureUrl}"/>
    </bean>
</beans>